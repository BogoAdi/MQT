Study documentation (3 links) from the lab2_0.txt file.

1. Create topic with 1 broker as --bootstrap-server. 
The brokers' ports are taken from the docker-compose_kafka.yml
The topic should have 3 partitions and replication-factor 1
The name of the topic is events1. 
	Command: /usr/bin/kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic events1

Create a second topic having 1 broker as --bootstrap-server. 
The brokers' ports are taken from the docker-compose_kafka.yml
The topic should have 4 partitions and replication-factor 1
The name of the topic is events2. 	
	Command: /usr/bin/kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 3 --topic events1

2. List all topics 
	Command: /usr/bin/kafka-topics --bootstrap-server kafka:9092 --list

3. Describe topic event1
	Command: /usr/bin/kafka-topics --bootstrap-server kafka:9092 --describe --topic events1

4. Send data. Create a Producer and send data to events1 topic.
	Command: /usr/bin/kafka-console-producer --bootstrap-server kafka:9092 --topic events1

5. Read the data. Create a Consumer and read data from events1 topic.
	Command:  docker exec -ti kafka /usr/bin/kafka-console-consumer --bootstrap-server kafka:9092 --topic events1
Create a second Consumer and read data from events1 topic, using --from-beginning option.
	Command: docker exec -ti kafka /usr/bin/kafka-console-consumer --bootstrap-server kafka:9092 --topic events2 --from-beginning
Explain the difference between the 2 consumers. 
	Well the first command will show only the messages that are created after the creation of the consumer, while the second consumer will 
see all messages.

6. Delete topic events2
	Command: /usr/bin/kafka-topics --bootstrap-server kafka:9092 --topic events2 --delete